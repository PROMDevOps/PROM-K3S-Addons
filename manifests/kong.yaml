---
# Source: helm-kong/charts/kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtNOElSMU03dnlSUVp6Q3VVQTFkT0F3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05Nak13TlRJeE1UUXhPVEE1V2hjTgpNek13TlRFNE1UUXhPVEE1V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPb0Z3WXNUK0dyT2o1WGlBNEpwbGZOb3hCdDUKc252M3JCcmZ5cFdkQVQ3S2pkU0NJSXhZVUZQUFljVWowUHluSGRmRkhLNC9vbGNieWFSV21jMnBmUXllK21rOAo5VVRkenRleE1ub2lWQ3EwK1V5OEZTVHZYK2gwRmRycFMzSlkwak5VREEyM09Gdy9NOUVwWnUzTEsyODcvS1YzCmpWZ2JLZTZxWEk1NFZlV2JhTVFEN0lUcElraVptWGFIeXd3QjNYR3pXMkJRWC9XbkxOQUdYK2VvZ2JRSlpqbmsKdC8wczFudTdnMFdOQURmSGI2ZDQrN1dWOWd2RkUyWTc5aVBFczFNRFJtd0dsZ2RkZkdsdGhzZVJ4emlla2lUcwpXVWJLVjhEYWdEMzJ3M3JFT0pkNUlTYjVoTlNxbGJXVGxiT0pMV2N3UVdpT0E3Z2RSMUJtSy8yT0MyY0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlRoMnFzdzducm1TRVRjYkJpWnN5cQpHdVZBVnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNEVVBTcDVKUStGaW5oVHNvUmJrQkZ2dHZDakNMeEx1ClJmckgzc1JHUEZJVlE4OHVySHhtdkN6Sk9LZ1orbVFlVG1GZ2F4YldQM0J0R0M1WlQrQVBOVzRrYkdmR2dsUVAKSUloSXZTYm4wNENMRmVSYS8rc1VKaDJHL0JEMVRyakF5Um1ITENQR1pzSktPWEFaeXVrM291bXhkNkcydkZhTgpHcnBkMThQN01CVDVWRVJzdUk4VzMzWmJ5bERmQVVWUW5mbTBzTkJNMnhYSFNzMTBDMjVOdE9aRFNwSEEyUTF6ClUwWEhaTDQxNk1WTndLWUd5emorNTJjbHhDM3NQbmQ3Z1NkZTFLZzhsY29zVTEvNzU0SzEvZitrRHF2aTZGUWoKYUFmZ3M0TXZCVzB5RE9mU1hmYStUTFByeXVsTUJnVmVQUEFWTFpib1VPalhUQ1hnLzEyN2xBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNmdYQml4UDRhczZQbGVJRGdtbVY4MmpFRzNteWUvZXNHdC9LbFowQlBzcU4xSUlnCmpGaFFVODloeFNQUS9LY2QxOFVjcmoraVZ4dkpwRmFaemFsOURKNzZhVHoxUk4zTzE3RXllaUpVS3JUNVRMd1YKSk85ZjZIUVYydWxMY2xqU00xUU1EYmM0WEQ4ejBTbG03Y3NyYnp2OHBYZU5XQnNwN3FwY2puaFY1WnRveEFQcwpoT2tpU0ptWmRvZkxEQUhkY2JOYllGQmY5YWNzMEFaZjU2aUJ0QWxtT2VTMy9TeldlN3VEUlkwQU44ZHZwM2o3CnRaWDJDOFVUWmp2Mkk4U3pVd05HYkFhV0IxMThhVzJHeDVISE9KNlNKT3haUnNwWHdOcUFQZmJEZXNRNGwza2gKSnZtRTFLcVZ0Wk9WczRrdFp6QkJhSTREdUIxSFVHWXIvWTRMWndJREFRQUJBb0lCQVFDR0wycThubVRRaVVSWApndExVVWtxQzJVMnBHMnkySEZ0NHhWMVowRDdJakVncTA3cHAvckdBZk9ib3JSTEY2K1QydGJVdVRKcC9MQlhBCnYwOU5WNk8yT3VvR3NjZEpCNDMwcTB2d01BTG13Z0k0ZDVnQUo2bHNsak41NUU4NGI2bUhlT2U0YlpoSmZJdnYKb0xlK0hjTDM4d040dFVZOGdNYlliS0xKcGtKS2Rtc3I0R0Zua0RxdEQ2UTRUUWVyZ1hLck1LQVdha0RNMXpiMwpNZnhNYzBrUlhLTUZHc2k0UFd1YU4xa3RDOGhidGRWbDhoMXYxVDN4emlvV0FqbnptVVdKMHMydS9tSnlqSVgrCkdZMWg3aWJMU2U3N2NoNHBPengydzY1WWo4enp0UzhQVEZ2cmFJditUc2liaThMRWttaHM4RFRBWStGODRtSzIKa0k3d3ozVEJBb0dCQVBBNU9QZDNGSmN5OGx5S2Y0VXRGRU4zbld0UUZGU0hhNzVETC9GVmxQelkyVi95dDg1cgpwb082RWtHWXRLcWsxcnpicFIvbzBPWUlHSkd5RTNsRXhxVkxNcmZaTWtHSnd6dnBGWS82TkhpcFdkaXVTVDNtCkpkQWFKL0ZVVTVJbFRHWUFkeXJqVGh4Z2xoZ0d1MlByODQ0TXhERURSVFBJK24rM0lVU0Y0ZWszQW9HQkFQbGsKUnlybWYxUzV4eHlhbWRDNEwwWFRHSVNPSFJFWFZQUG9wbVRGY2Y5NkN4eWY4WkFuZm5ueHh6VmJBYjZqeDRlZQp2dXZTdnh3bHAySm43SmV6S29UZnRzZ2orZHRwbnljOGdnT3E3L0tmTzJPMlFpUDZ0R0M1ZkVGTmsyZVhpT08yCmxLcm45T0RJbHpCMFM1K056bldLNVVLdWNrS2pRbGFCT2R1UVEwZFJBb0dBSWd4cVI2RUlPUm9PZ2hGYlc3djAKK0U4VzcrUHN6Y0pZQWlLeHcrb1djUFFuYzFNS3ZHWkR0cjRENG1wTGlUaE4rM3pDWGRCNDgzSElVYlpFemxaeQpOWEdBSWREV0w3WGdCempWUm8vM0tmY085Z2hWOTBFTXNQOVVFLytZek1rZW1BS080WFJRV1BOVHN0b1phMk5CCkpTd29EcTVnKzZNTDVsaEZqZG5RR0djQ2dZRUFuRDJJb0lYYlM5Yy91Tm5hZDNxTWt6QVc4aVNlYlRDeTFrUHcKeXIwd0dCLzdpaWxpQ3kvUytzN1FRTXNOSXNRMG92Qi9KL3JXSStvckhXbUNQZC9QU1lObVhhaThSZ3U3MjdiNgp0UldJVWZZVUhQbjRJZFpVM3l3VmZrdjloeTdXWWVMbTdOTjVCTUptaGNLMkJmV3ZYTkJ4cFA3cE1ucFpleHhtCmhQbXlUS0VDZ1lCWi9oMDhtOWRBV24vSVF5WFNTamp5SzJ0aXNQVHpYMnUwSzY5bk4xbmdxWDJSdlVpNXZlQWgKNmtDcWp0dERIeUxJcmI0TWcxWXdpeUxLQUNZYkhFbDlhNGVPcmQvY0pVaHE3Mi9wY1Q1ajh2NXlDaTE4TTZNUQpYQTlNODl0SjBUY28xeUhhWmNDYWFpMTJrQVJZVFJTSkVEKzBNMEJMOHNhbHlYalVtSXAzZUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lSQU9RRGVINmJDRVI0clhOLzFJZWpyZGt3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05Nak13TlRJeE1UUXhPVEE1V2hjTgpNek13TlRFNE1UUXhPVEE1V2pBdU1Td3dLZ1lEVlFRREV5TnJiMjVuTFhaaGJHbGtZWFJwYjI0dGQyVmlhRzl2CmF5NWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMaEYKRlV6b0Y5UzNSTk92QWIrY2k2N2lwWm9oR1pKQ3JveXBnbXJXNHNjY3BFNHhYZzhSOTc2QStuTkRrSDNZNW9vdwpuWTdPdExzKzU3VHVucDJlTGZnejFsOFFhYkpvZFUySFhXbE5HQ1htSmE5QmZGS0FIZXNnb3dxaGFueERIYWhjCi9rbnI4aHZEMG9xNmFIMC85THJEYlVxKzdCZElxRWhmVVRUYUxxSjJIYXRIamNFWnMxSUVOMlRDY21VaE5EeWYKaWpFakNpVjBrWWdNczBGWlhzWkM5aEt3U1MzRXFsaVJLd20xUHRuT0hQcTFOcEFvcFdjL1VqY1BWOGN1ejNJdApVa0JSbFVERWFSWW1aMUpwRVdXVktEUGJESEtLR2F0NlMzT05EeW9nVGF4NzFlbW1LeUJWaWR6S0xlUm9NcnRICkFzTklpQ24zNmZxUEdISkhXUThDQXdFQUFhT0JrVENCampBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVVTRkcXJNTzU2NWtoRTNHd1ltYk1xaHJsUUZjd0xnWURWUjBSQkNjd0pZSWphMjl1WnkxMllXeHBaR0YwCmFXOXVMWGRsWW1odmIyc3VaR1ZtWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUtYSFQxcVIKbXh0d2xZTmszUkVZRHFvcW1wR3NsN3NiUWVlVjkvdy8zVkpzVWRxZlNPLy9GbktKc0VmT2JEektVb21zZVhxUQpaRTZsajliT0JlLzQwOC9QMjJzOTYzdGNkbGlMV1VNQ1AzMXdxQTVmcnd2OXp3cTUzODVBeEZ2c2w5dXlobHJWCmxsMlpaa0xwanpxczMzTTVDelgvbFNzb3dMSzEzOG13MEdsS3ZCc0doSFBFQnpmRUE0ZmNkbitsdEhrSGs3S3oKVXdwYjFaZSs3a2pmK1hhNmZRSGd3ZWJMdmx4NklLSllRUnpqemt4QzFSUFhPOC9lcGN0RXQxZldiMFFHZTBZTworVmFJWWxyMjVCMmt6N3JtUEhTZ1luSHpKanNHb2VSdkJ5ejI1dnJvMFIwUXZSNE1lTWNBS1oxTWl2dHZWRmdlCmJGSmRLNUh4cXA3NHhoUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUVVVlRPZ1gxTGRFMDY4QnY1eUxydUtsbWlFWmtrS3VqS21DYXRiaXh4eWtUakZlCkR4SDN2b0Q2YzBPUWZkam1pakNkanM2MHV6N250TzZlblo0dCtEUFdYeEJwc21oMVRZZGRhVTBZSmVZbHIwRjgKVW9BZDZ5Q2pDcUZxZkVNZHFGeitTZXZ5RzhQU2lycG9mVC8wdXNOdFNyN3NGMGlvU0Y5Uk5Ob3VvbllkcTBlTgp3Um16VWdRM1pNSnlaU0UwUEorS01TTUtKWFNSaUF5elFWbGV4a0wyRXJCSkxjU3FXSkVyQ2JVKzJjNGMrclUyCmtDaWxaejlTTnc5WHh5N1BjaTFTUUZHVlFNUnBGaVpuVW1rUlpaVW9NOXNNY29vWnEzcExjNDBQS2lCTnJIdlYKNmFZcklGV0ozTW90NUdneXUwY0N3MGlJS2ZmcCtvOFlja2RaRHdJREFRQUJBb0lCQVFDNEJFMUVNeGJ4VjEvRgpZYVNHWEdmbDZ2TGptNkIwdm1DZm1mdmlnOXVPYWR6dk5UK3dId3BnVlY5RzBqY3VaZmU4RXRhVk1YbXM4Q0htClB0RnBwL2hTUURvWlQwT3VaY0NXL3RKYkFTRlhYNkZNaGtJSUJXZGJVb2xmYVZqMDVQVnVHQWZkZkdHWU5wTS8KOU8yNS9xOS8vdjlhd0pUMm41bG1STUhNM1FIclBBV0F2eUh4NjkyL3J4d28yc0FVcVlHeVpiMjMvYkpCdDd1bApYdFpHSWxuVHgwMUxpbFdkYmZuWWNzUmU4SFovZFJkSGZMSGxCZEJ1bGdaYzRkcy91ekRVLzFNa1JYNmNBU0Q2CnRFazhlbzJ1Q2lKVzZjaUtIYmJScnU2Z3NpUUpNU3ZzeG5ZUkU5UWRGV2dtN1NwV0FQL2dkVHMxQURMRFBWUDYKSlF3WjdPb2hBb0dCQU4wbGhQK3I0ejdnRGhVU1hkMGxkZis5aG1UTXhQM1BnVG1KRG5sNDVOakl2VG9lSEVLSApnai9BZEhtSzRoQzRjL1lGWFhwV1h4MTQ3ZEpyT0I4L3V1RzBHUGpPYkJuaEpQOUNkcVVoa2l6MEExQ3dXMDl4ClZlTkhXUEJjZXdkdjZ6OGE4TjZ6Tk5KRGR2Q3VSOGFNdmo2UDdTeUM2YndzUXhKRkxicVNYbStmQW9HQkFOVlAKdUNIRWdKV0w2MHkyS2x3U1lOOUxrc3VSYUVxbU0wRFoxOVBLQm5IQ1hBbGlwNnBTWmF1VFIyYUdEZHdYNlVmNwpQdEF1QWJvRFZGaldZNnM1dlhpL041YU9pODVROVpQTWNmbkZaYi96U2lBenVPRnE5cm9VZyswTUwzbzdydHpNClN3RWlXbmUzcnlaelNmOTRZZjVGWjhsdnJ0Y09IWFRjaXZVV2dlQ1JBb0dBYzNOdythRWM0K2hJc2N1QzRUNzcKV1dYeVVaRnRqaXZVaE5yK2lZQUp5UHNUZnRIVll3NG5lMnpYNGRRVnJURCtxUU9vQjRRcjU5RUlKMy8rTHFJdwp5RUFqZ1ZFU3NuZ052bzFPTDJ0VlNzNmhKSEROV3E0S2Jyc0N2WWtxV1htZVVMV1o1a21jVytFSXFTSHpLcjZ6Cld5bjhZZTUrWTlTZnQxd1NRWUxFZG5VQ2dZQXNvOUZCNTlDTSswb1R0Sytxc3dIbzJQVHdldzZiU0tyRE1KT1YKTTlzalpXeERYb3o5L041Z0NLTlJsazVDT0JMT3lJcDlvSk1sN1ZweWVQTkV1d0dteWtXRTBYSDZqRURJWEdtaAp2cWlyZ2V1S1Q2aXFLK3RVUjhUUUQ5UER2Y2U3VjFsKzlFU0FkMFZGUTYxQnRGeTFqS3JLb2YreDY3ZElaSHNFCkRXRENzUUtCZ0JsL2Q5WEtOaG50Q0R3a1VKYlF6VThnZ2o5U3pTRGNIU3hBUWVGNW42Zk5LeFgvZGxvMm5YQTgKTU0vVDZsL2VWWjN1M2J0WlV2Umx4T0lDc0o5aHdoRWw0dzlkSGpvNjNlMEdHQVFQaXZvTk4vdEpGZDk2cDc1WQorZmNJYmNtT3RCWE5CQWl3L2hublFjVDBjeU90alFweUxMTXI3NkFlVFZsYzNpVm5rUWNICi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: helm-kong/charts/konga/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name:  konga-config
  labels:
    app.kubernetes.io/name: konga
    helm.sh/chart: konga-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
  name: kong
rules:

- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong
subjects:
  - kind: ServiceAccount
    name: kong
    namespace: default
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong
subjects:
  - kind: ServiceAccount
    name: kong
    namespace: default
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
    app.kubernetes.io/component: app
---
# Source: helm-kong/charts/kong/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "release-name"
---
# Source: helm-kong/charts/kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
    enable-metrics: "true"
spec:
  type: ClusterIP
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "release-name"
---
# Source: helm-kong/charts/konga/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: konga
  labels:
    app.kubernetes.io/name: konga
    helm.sh/chart: konga-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: konga
    app.kubernetes.io/instance: release-name
---
# Source: helm-kong/charts/kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "release-name"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.22.0
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.2"
        app.kubernetes.io/component: app
        app: kong
        version: "3.2"
    spec:
      serviceAccountName: kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.2
        imagePullPolicy: IfNotPresent
        securityContext:
        
          readOnlyRootFilesystem: true
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, 0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        volumeMounts:
        - name: kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-tmp
          mountPath: /tmp
      containers:
      - name: ingress-controller
        securityContext:
      
          readOnlyRootFilesystem: true
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-proxy"
        image: kong/kubernetes-ingress-controller:2.9
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: kong:3.2
        imagePullPolicy: IfNotPresent
        securityContext:
        
          readOnlyRootFilesystem: true
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, 0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: webhook-cert
          secret:
            secretName: kong-validation-webhook-keypair
        
        - name: kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
# Source: helm-kong/charts/konga/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: konga
  labels:
    app.kubernetes.io/name: konga
    helm.sh/chart: konga-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: konga
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: konga
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: konga
          image: "pantsel/konga:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 1337
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          envFrom:
            - configMapRef:
                name: konga-config
          resources:
            {}
---
# Source: helm-kong/templates/konga-ing.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-ing
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP  
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
      - 
      secretName: kong-cert
  rules:
    - host: 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: konga
                port:
                  number: 80
---
# Source: helm-kong/templates/konga-cert.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kong-cert
spec:
  secretName: kong-cert
  dnsNames:
    - 
  issuerRef:
    name: lets-encrypt-issuer-prod
    kind: ClusterIssuer
    group: cert-manager.io
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-validations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
webhooks:
- name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - UPDATE
    resources:
    - secrets
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtNOElSMU03dnlSUVp6Q3VVQTFkT0F3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05Nak13TlRJeE1UUXhPVEE1V2hjTgpNek13TlRFNE1UUXhPVEE1V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPb0Z3WXNUK0dyT2o1WGlBNEpwbGZOb3hCdDUKc252M3JCcmZ5cFdkQVQ3S2pkU0NJSXhZVUZQUFljVWowUHluSGRmRkhLNC9vbGNieWFSV21jMnBmUXllK21rOAo5VVRkenRleE1ub2lWQ3EwK1V5OEZTVHZYK2gwRmRycFMzSlkwak5VREEyM09Gdy9NOUVwWnUzTEsyODcvS1YzCmpWZ2JLZTZxWEk1NFZlV2JhTVFEN0lUcElraVptWGFIeXd3QjNYR3pXMkJRWC9XbkxOQUdYK2VvZ2JRSlpqbmsKdC8wczFudTdnMFdOQURmSGI2ZDQrN1dWOWd2RkUyWTc5aVBFczFNRFJtd0dsZ2RkZkdsdGhzZVJ4emlla2lUcwpXVWJLVjhEYWdEMzJ3M3JFT0pkNUlTYjVoTlNxbGJXVGxiT0pMV2N3UVdpT0E3Z2RSMUJtSy8yT0MyY0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlRoMnFzdzducm1TRVRjYkJpWnN5cQpHdVZBVnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNEVVBTcDVKUStGaW5oVHNvUmJrQkZ2dHZDakNMeEx1ClJmckgzc1JHUEZJVlE4OHVySHhtdkN6Sk9LZ1orbVFlVG1GZ2F4YldQM0J0R0M1WlQrQVBOVzRrYkdmR2dsUVAKSUloSXZTYm4wNENMRmVSYS8rc1VKaDJHL0JEMVRyakF5Um1ITENQR1pzSktPWEFaeXVrM291bXhkNkcydkZhTgpHcnBkMThQN01CVDVWRVJzdUk4VzMzWmJ5bERmQVVWUW5mbTBzTkJNMnhYSFNzMTBDMjVOdE9aRFNwSEEyUTF6ClUwWEhaTDQxNk1WTndLWUd5emorNTJjbHhDM3NQbmQ3Z1NkZTFLZzhsY29zVTEvNzU0SzEvZitrRHF2aTZGUWoKYUFmZ3M0TXZCVzB5RE9mU1hmYStUTFByeXVsTUJnVmVQUEFWTFpib1VPalhUQ1hnLzEyN2xBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-validation-webhook
      namespace: default
---
# Source: helm-kong/charts/konga/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "konga-test-connection"
  labels:
    app.kubernetes.io/name: konga
    helm.sh/chart: konga-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['konga:80']
  restartPolicy: Never
