---
# Source: helm-kong/charts/kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRV3NIK29DVW1CanRsckxPVWg3L3J4REFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlNekExTWpFeE5ETTNNekphRncwegpNekExTVRneE5ETTNNekphTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZlRHJyMWtHNnRLdmRNZm0yUkMxV3hTUnJ1QnUKeW4wNzhYWTd6TmYxeHBtWlNTbzZLNjNHeEVUSDVZdzRSMzJxclVCMm9MTDBqZTNadHdRa2txdlN2U2p5ZE5YLwp4NjEzU3ZZSVV2UVMxbVRIMmpMRHVEeGZIYk9PWlJTVUJoZFVhdVN0dTFZMUxoNll0NExkekZMeHR4d2RmM1JiCnFEVnZrY014WGJhTWd5dWdXMGlTK1RHYlkyUlBmSFd1ZDVQbFRVb3U3N1ZaSnRyV0tqUXhrWmk2RkZ1NVptdnIKTU1ndXhMNVJBbmJ3N1RDSUlkOVFxSXdnTkNOaWpDUDJYdDVBeDVxMHVHRE1KOVdiaU96NmRDaWNzbUdVWGZtRApZOHhoV2lEcHdFSEZ1SjZ0RTdEMllUbHRmQUs4VHVwVWRmWFA2a3lPMGtKWXkreStJR2hyTy9DTHd3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHRWtUMFFJV1RFTDZ3Y2kzajFCVk81dgpFRWVFTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFEUDZXamFKSXFFUjhyQnBGWFNHcCtaa3RydExsVy95SkVSCjFKSU54WUttRi96eXljd1JkUzFkRDNGWGRudWhaOXpFMnlMdGNtNnRCVHZxd3R6dnFVWU5XTUZrZUVwVjh1eHQKSjI1QzlNSjY3OG53dlBjS0FrNkYvQjhkc1ZzWDVPcXJ0STVIZ1VPYW9YMlkrWHNoK1RvSXhjNVRRZlYzTE1qRApoa1BHU3NONjVjbGxQazB5RUY5MUpvMytuVXg3R0pkdS8rUDJPNzRTOUd5V2ZiMUcxNkMralIzOE1aZFRtQjRNCm1GL3ZOeVB0amVVU3E1OXZ1YW9Bak5oRUQ3K1hnYjVDdll5YTF4SFVtNHkxeWxtM1N0cmFoZEhlZXYxOVdDUVQKZHI5eDhhZEk0cHU1eGVvSTloYThUSExZSXNhdlN6R2dKbFZtN2RDU3ZXc2ZNTkFwRGxNcgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNmVEcnIxa0c2dEt2ZE1mbTJSQzFXeFNScnVCdXluMDc4WFk3ek5mMXhwbVpTU282Cks2M0d4RVRINVl3NFIzMnFyVUIyb0xMMGplM1p0d1Fra3F2U3ZTanlkTlgveDYxM1N2WUlVdlFTMW1USDJqTEQKdUR4ZkhiT09aUlNVQmhkVWF1U3R1MVkxTGg2WXQ0TGR6Rkx4dHh3ZGYzUmJxRFZ2a2NNeFhiYU1neXVnVzBpUworVEdiWTJSUGZIV3VkNVBsVFVvdTc3VlpKdHJXS2pReGtaaTZGRnU1Wm12ck1NZ3V4TDVSQW5idzdUQ0lJZDlRCnFJd2dOQ05pakNQMlh0NUF4NXEwdUdETUo5V2JpT3o2ZENpY3NtR1VYZm1EWTh4aFdpRHB3RUhGdUo2dEU3RDIKWVRsdGZBSzhUdXBVZGZYUDZreU8wa0pZeSt5K0lHaHJPL0NMd3dJREFRQUJBb0lCQUZHZGNlR3crWjc4Z3NvSAo4R0VUV1pZOUtWR1RkRllwT2IvYmVLYlZQaWxkOUlYNXZHNzlwMzFhV3orWm5SSWxvbWZ2TlBhRFBLQkN2bFVGCmx4V3Y3RXlpZTJtV1BEb2NLS0w2RkpHT0p2eTJFcC9zVXl4NXROK1NoMEJ5Mit6OE96TktOZTVIK1NyczluSWoKc3U3WWl3MVJQR0g3NHZoaUhWc0tlTEd4UUh1TkZRTllSM1VnS3lzem9JK3pOZmk3bmN3c0hNVHNPWVNtM241NQpoRUFyV3FsNGVDamV3M1o5UDVMT0ZZTVJYZXU0eCtZVHJpcVFVVVZRa0ExR2k4U1VBbllRekNzdU0yK1BGV0l6CitJK3ovZHdJUnRudHg1VHVITXk0aE5sWE9yaEwvWW5oUStSK1J3dVZhODVBSDhRakFCQWw4SExFWXNDOXlhaUsKWFphRUM2RUNnWUVBN2lXWG9NdlVXYzFVRkdDdTd2c2xNTUhZbTljT1ZGSkF3MXF1V2pJdTVOdVhQQ25RT1IxUwpaYzlmU1FrNlh4enNoU210S2lqTHR3K2J1b3c2bCtIdnQ3MW1oWEI2T3pVcnBZOVBOYWRqWVM3Q0RQUUZ1OHplCllya2RoRFYvKzBiM1ZsRWU4QzY0aGU5NHVOVlZMTW9tV2xmVy90dmNJSFRmcFV2TXRGcE9YaGtDZ1lFQSsybHAKL2NmUnRsSTRmSEZHdzBya3l2cXdEQnhzdlZDMm1zYldIVXJHMGlVN3FWanEvUEtua3Vvb3NZQWlIbllnU1JtRApXTWRHSWU2MllzZVVCRUVTQWZuTlcxRXY4ZnBGRXBnYW5XRWFhK1NnVXpSQ25IYW1nOEh1TFo2dVVDV1lmM1k0CmFQTnA5bXB3R0lYVVQwV0RoTm1QeFhYaTRPZVVCWHZ1ZFBETFBEc0NnWUJnRVBBU29FYkFGeEVVeTArbC9jK3AKMUhpUm5QWWQwN1JtV2IwOWkwTFpkUytUeUhaRG8rMXFQblg4bTJsZGx1aGVhMHA4V0VxZFJRR1lCaHRZeTM2TgpDeTFCSlBkWnpRQVhZREVldnJCYk1xWjYzVEUyNmRUSDFFN3cxemdTWURWRUw2TWdWbWgvTnZQbTg3L1JPcGF3CkdRRVVmQkpYVVc0cVd1SnYyb0lFZVFLQmdRQ1QwOFRkMHd0dFgrVVV6dXBqMUhxNUd6USt1c3Y1ZVNjVjFRcDcKQ01mbE1yMWs4d0toSHZFSGdxWFEwTjIrK1lnOFUwTVhCWDBvWUp0ZmM2aUY0OWo1em05QVhYbUtsN1RiblJJeApMYktDZEZrTTgzS2pXMlRIbmxVMC85UFJEbm9mb0Z6RTRUT1NENzIvdlprN3owem81YUFTNUNFMlN4U1BNUExpClVkKytsd0tCZ0RsWEFuZEtObDJ0bmVqN2NUaFF2UHZmTGF1dkEyd1ozd01zYWRDRWp6eVI0VFlZVjN2ZUZBcHcKV1AzdUdoL1RzS3hLTTJyR3pDSHZTbjByTjJSMUtNZlJLT1BmaUlINnVwZmhpSlJGaVE2c3JYYW9hcUV3VW9xZgpOWUhRblMwQ2lISjMrM0pKL015UHM1Rm9EL0ZvZnhuVU10RGxBN3gzZm5sdDhWS1Z2K3pwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaakNDQWs2Z0F3SUJBZ0lRVElHRVBQY21QUlA4MzJtQ3lTQkZrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlNekExTWpFeE5ETTNNekphRncwegpNekExTVRneE5ETTNNekphTUM0eExEQXFCZ05WQkFNVEkydHZibWN0ZG1Gc2FXUmhkR2x2YmkxM1pXSm9iMjlyCkxtUmxabUYxYkhRdWMzWmpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBrbmkKdFlRUG5FSkJlRVRUcUVLSmlRSGlSczFYQUloWm5YMElmOUdmVm9kMmN4bFUzTndYaHM3L1pFUnFIRUF6ZFpVYwo5bWthcHBhMFc3U28ydHBKOHhUZXRLRnZteXJWZnJadjZkTTUvUjU1ellvd3U2SnRKSzlIQ3RYeFl6S1BuUHhlCkpPUllmVjRsNUIvZnZaNTJGYkNGQlV2NmJMd2IvTE90Q09lMWRlSUNKN2hpc2FaeEF3SzRCVjE3YllxcDdZdjUKMy9GQVJWSERjU3QrdHl1Tmo5dUFwYmRtZlcwYzNYZDkrMFlRSy9mR0srRVdqNHB3eGozMUtwSFZDSVViSDRJRgpUL3REdkhkTC93YWN0dDV6b3g4OWthc3FTcFBPdUJGbm9jdlZhakYxZGdXMnM1YitsdnZRanNRN0ZQUVU1SWJzCkN1MXRFMGZ1VXRTMGVoa2p1d0lEQVFBQm80R1JNSUdPTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlJoSkU5RUNGa3hDK3NISXQ0OVFWVHVieEJIaERBdUJnTlZIUkVFSnpBbGdpTnJiMjVuTFhaaGJHbGtZWFJwCmIyNHRkMlZpYUc5dmF5NWtaV1poZFd4MExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTTdyY1BWTW0KWVhiWjBIRjRYOGUvcDcyY1BnN1FMTUtBenRYSnB1Nm5JRHczajRoL0xYbE1zWmV1V0dHNFJidCtjZHNWSXJXQwpUUWtDY255c2tUamh3NjJIVDloWEwrV0t0amFpOW0xaTVySVdmSmNIam1pcDRJUVN3bHAwWW1RK3VKQUlNVlo4Cms1Q2s4cUZKdUlickN0YzJjZ2VxbjFHV012STNQUFhoZjlqU3ZaQm8yUktReERQMHJxUkJtdC81YXFTZTJFWG0KcitsQ25QK1BVWW1odEp5Uzhjekw4ZW00eUJMQTZNQzdjNzI4OXJrenlOdm1RaWt0SlFXdi9nTHZOR1d1UEV3YwpPNVdvTHN4V1llaC9reEFnaVVWd25mVjVhVFE1VEZvOFRCYzhHeTJxc0NWRU9uNWJxR1B1R1lTVGhubnVoWlgwCnNWd25sS1daemNNWGxnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGtuaXRZUVBuRUpCZUVUVHFFS0ppUUhpUnMxWEFJaFpuWDBJZjlHZlZvZDJjeGxVCjNOd1hoczcvWkVScUhFQXpkWlVjOW1rYXBwYTBXN1NvMnRwSjh4VGV0S0Z2bXlyVmZyWnY2ZE01L1I1NXpZb3cKdTZKdEpLOUhDdFh4WXpLUG5QeGVKT1JZZlY0bDVCL2Z2WjUyRmJDRkJVdjZiTHdiL0xPdENPZTFkZUlDSjdoaQpzYVp4QXdLNEJWMTdiWXFwN1l2NTMvRkFSVkhEY1N0K3R5dU5qOXVBcGJkbWZXMGMzWGQ5KzBZUUsvZkdLK0VXCmo0cHd4ajMxS3BIVkNJVWJINElGVC90RHZIZEwvd2FjdHQ1em94ODlrYXNxU3BQT3VCRm5vY3ZWYWpGMWRnVzIKczViK2x2dlFqc1E3RlBRVTVJYnNDdTF0RTBmdVV0UzBlaGtqdXdJREFRQUJBb0lCQUVHNVMvMFZhRmViTWFFbwpTY3JGK1B4ME5VZVJ1QVozbHlLc3lISkNqdjFaVzBFQUF0RUFqTzNhVm1IOUsvam1hKzd0Q3Q5TTNFS0N5WjM3CjZlWjA0VFh6S09QbHJOOGZWUmpFWmxmN1o1MWY0QXZJakJDbzVGbloybWRkbEpNL1l6bGFld1lteEMxeXRuOEYKSTBXOWVBU3haZkhRM0ZVTnVlV1NOcHVZNTlNT25qTGMveDB2cGxkQkRuN0RyZFl0b2Y2WG12TlBFSnhYbHp6dApzZUM4RUswdGI0b1lXVm9sNmViQkZBdGNqSkRJOGRya2l4NkdRMGxWYktnY1lQcXBDd0Z5dkZ4NFBzUCtvd2cyCndyUmJvc3JESGZsUDFNdTNiOXBiVEloemY5S0VOb2JKc0dmZnYzRTJTZmpMcThNWit5eDFzaDE2ZDBiVVBxRFcKMTgxQk1ZRUNnWUVBN092Mis2dlZDRjZHb041YnBhelJ3ZGtNMmoxMXkxeE1QR0NuRlB3VFFmTWpUd2hHNGl1YQpQQjlBbUVZQzJuWHJDZmpsdXdFcWlMM0swNzNvVWFLQ3NtZkVveFNsSmpLYzhjT0llVUcwaldwZ2pBcEZYOFRQCm9zdzl0QjRCcmdTODVXRzFWa1M5MEdMajZUdm5UMDB2R1FtZExXenRhQURTdENSS0dnUXMxZnNDZ1lFQTR6amsKRmN0NndKc1grSUpVUUwwcXZOdk1JV2tYS08zRXRIQmFvbEV5MlUwSG40clJrbkxuTDlLMk1aUTF3QXlYMjFXSQp5V29KcFhrSmJ3VFc1SnZXdURtV0pGQXpaSHpUSnpkN3dKdXc5eE9qazJQMGl6bVdTSjZjZ3J6Umd3dVJhNmpnCmhBSWN4RUhMY3pPL094dnNQK2J6VDU1bnZzUW1mdDdscnBnT1BVRUNnWUFIUnZRdUpNZ0ZXc250MVFhaG54NU8KUXZsM0ZwNHdvZVFoa3FKdkxaTDEycDhDQlhJUDdtRHRhZFJWR1FsclptWFN4NWRlMkJsVFcra0grZlJSMVprSQpHOUhaWkgveUhXbmVyeS9ZOGFDM0cwWmQ1czdjc3pIaGdUNS84dEFBWlZyYi9OVlNFZ2gyaHlNUy9la0w4WVg1CjBlYkhCMnAvWUU4WWcyalhSYnVPMHdLQmdRREN5b2ZHSTIxMVpzQXkrOCtzdkQ3Q0x3K2RhTkZBOWl6V255Y2oKMWNab3dYK1NoMWhJV3hiVVNhaUZjbEJ0OXAzTW0xUXJqeXI3MzNwMTRVazBMR0QwQi9JdDZVOVZpeWtkaXBRZAp0NXNMQlp3S2cvc2x5OVdKSmVoNHI5UlFxbjhkTTJaZDVNMnlkZEVyVHFaV3p3WkdkZ0FLTm5zcjhFNHNIM3Y1CnBFTTR3UUtCZ0YxczBTL0NwOVRsblFMR1RYamE3d2JRSHZ5TDF6V2dXWWhrdWIvMm96ZUxIbUtCRVIvUnpHUUEKNC9rMVRBMVpvNmtMQ0tnZWVzL3RHc0FWNWQ1ZVhUOHNEUzQwNDltNWZnNlltOHNBSTVvanE0Q2xhd2FieThMQwpteG5QdVRyMHVKWXRwRTlrdFljNFh1R3dyUWQrU2FCd3B4MitvQ3RkdzhVYVQyWTlMZld0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
  name: kong
rules:

- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong
subjects:
  - kind: ServiceAccount
    name: kong
    namespace: default
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: helm-kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong
subjects:
  - kind: ServiceAccount
    name: kong
    namespace: default
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
    app.kubernetes.io/component: app
---
# Source: helm-kong/charts/kong/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "release-name"
---
# Source: helm-kong/charts/kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
    enable-metrics: "true"
spec:
  type: ClusterIP
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "release-name"
---
# Source: helm-kong/charts/konga/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-konga
  labels:
    app.kubernetes.io/name: konga
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: konga-0.0.14
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  ports: 
    - name: http
      port: 80
      protocol: TCP
      targetPort: 1337
  selector:
    app.kubernetes.io/name: konga
    app.kubernetes.io/instance: release-name
    helm.sh/from: deploy.release-name-konga
---
# Source: helm-kong/charts/kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "release-name"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.22.0
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.2"
        app.kubernetes.io/component: app
        app: kong
        version: "3.2"
    spec:
      serviceAccountName: kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.2
        imagePullPolicy: IfNotPresent
        securityContext:
        
          readOnlyRootFilesystem: true
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, 0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        volumeMounts:
        - name: kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-tmp
          mountPath: /tmp
      containers:
      - name: ingress-controller
        securityContext:
      
          readOnlyRootFilesystem: true
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-proxy"
        image: kong/kubernetes-ingress-controller:2.9
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: kong:3.2
        imagePullPolicy: IfNotPresent
        securityContext:
        
          readOnlyRootFilesystem: true
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, 0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: webhook-cert
          secret:
            secretName: kong-validation-webhook-keypair
        
        - name: kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
# Source: helm-kong/charts/konga/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-konga
  labels:
    app.kubernetes.io/name: konga
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: konga-0.0.14
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: konga
      helm.sh/from: deploy.release-name-konga
  template:
    metadata:
      labels:
        app.kubernetes.io/name: konga
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: konga-0.0.14
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        helm.sh/from: deploy.release-name-konga
        
    spec:
      serviceAccountName: default
      dnsPolicy: ClusterFirst
      containers:
        - name: konga
          image: "pantsel/konga:latest"
          imagePullPolicy: IfNotPresent
          env: 
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
          ports: 
            - containerPort: 1337
              name: http
              protocol: TCP
          resources: 
            {}

      affinity:
---
# Source: helm-kong/templates/konga-ing.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-ing
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP  
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
      - 
      secretName: kong-cert
  rules:
    - host: 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: konga
                port:
                  number: 80
---
# Source: helm-kong/templates/konga-cert.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kong-cert
spec:
  secretName: kong-cert
  dnsNames:
    - 
  issuerRef:
    name: lets-encrypt-issuer-prod
    kind: ClusterIssuer
    group: cert-manager.io
---
# Source: helm-kong/charts/kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-validations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.22.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.2"
webhooks:
- name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - UPDATE
    resources:
    - secrets
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRV3NIK29DVW1CanRsckxPVWg3L3J4REFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlNekExTWpFeE5ETTNNekphRncwegpNekExTVRneE5ETTNNekphTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZlRHJyMWtHNnRLdmRNZm0yUkMxV3hTUnJ1QnUKeW4wNzhYWTd6TmYxeHBtWlNTbzZLNjNHeEVUSDVZdzRSMzJxclVCMm9MTDBqZTNadHdRa2txdlN2U2p5ZE5YLwp4NjEzU3ZZSVV2UVMxbVRIMmpMRHVEeGZIYk9PWlJTVUJoZFVhdVN0dTFZMUxoNll0NExkekZMeHR4d2RmM1JiCnFEVnZrY014WGJhTWd5dWdXMGlTK1RHYlkyUlBmSFd1ZDVQbFRVb3U3N1ZaSnRyV0tqUXhrWmk2RkZ1NVptdnIKTU1ndXhMNVJBbmJ3N1RDSUlkOVFxSXdnTkNOaWpDUDJYdDVBeDVxMHVHRE1KOVdiaU96NmRDaWNzbUdVWGZtRApZOHhoV2lEcHdFSEZ1SjZ0RTdEMllUbHRmQUs4VHVwVWRmWFA2a3lPMGtKWXkreStJR2hyTy9DTHd3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHRWtUMFFJV1RFTDZ3Y2kzajFCVk81dgpFRWVFTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFEUDZXamFKSXFFUjhyQnBGWFNHcCtaa3RydExsVy95SkVSCjFKSU54WUttRi96eXljd1JkUzFkRDNGWGRudWhaOXpFMnlMdGNtNnRCVHZxd3R6dnFVWU5XTUZrZUVwVjh1eHQKSjI1QzlNSjY3OG53dlBjS0FrNkYvQjhkc1ZzWDVPcXJ0STVIZ1VPYW9YMlkrWHNoK1RvSXhjNVRRZlYzTE1qRApoa1BHU3NONjVjbGxQazB5RUY5MUpvMytuVXg3R0pkdS8rUDJPNzRTOUd5V2ZiMUcxNkMralIzOE1aZFRtQjRNCm1GL3ZOeVB0amVVU3E1OXZ1YW9Bak5oRUQ3K1hnYjVDdll5YTF4SFVtNHkxeWxtM1N0cmFoZEhlZXYxOVdDUVQKZHI5eDhhZEk0cHU1eGVvSTloYThUSExZSXNhdlN6R2dKbFZtN2RDU3ZXc2ZNTkFwRGxNcgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-validation-webhook
      namespace: default
